#!windows user root;
worker_processes auto;
# worker_rlimit_nofile 65535;

error_log logs/error.log $wafcdn_error_level;
events {
    worker_connections 10240;
}

env SOCKET_API=$wafcdn_socket_api;
env SHARED_TTL=300;
env DOMAIN_TTL=60;
env CACHE_DIR=$wafcdn_cache_dir;
env UPCACHE_LIMIT_COUNT=10;

http {
    access_log off;
    resolver 223.5.5.5 223.6.6.6 valid=300s;
    lua_package_path "$prefix/script/?.lua;;";
    lua_shared_dict ssl 128m;
    lua_shared_dict ssl_lock 5m;
    lua_shared_dict domain 128m;
    lua_shared_dict domain_lock 5m;
    lua_shared_dict cache_lock 128m;
    lua_shared_dict upcache_lock 128m;
    init_by_lua_block {
        require("init")
    }
    server {
        $wafcdn_listen_http;
        $wafcdn_listen_https;
        ssl_certificate certificate.crt;
        ssl_certificate_key private.key;
        ssl_certificate_by_lua_block {
            require("wafcdn").ssl()
        }
        location /@cache {
            internal;
            set $cache_file "";
            access_by_lua_block {
                require("wafcdn").cacheaccess()
            }
            alias $cache_file;
            header_filter_by_lua_block {
                require("wafcdn").cachehead()
            }
            log_by_lua_block {
                require("wafcdn").cachelog()
            }
        }
        location / {
            rewrite_by_lua_block {
                require("wafcdn").main()
            }
            set $backend_url "";
            set $backend_host "";
            access_by_lua_block {
                require("wafcdn").backaccess()
            }
            proxy_pass $backend_url;
            proxy_set_header HOST $backend_host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $remote_addr;
            header_filter_by_lua_block {
                require("wafcdn").backhead()
            }
            body_filter_by_lua_block{
                require("wafcdn").backbody()
            }
            log_by_lua_block{
                require("wafcdn").backlog()
            }
        }
    }
}