worker_processes 1;

events {
    worker_connections 1024;
}

# 后台接口地址
env WAFCDN_API=http://127.0.0.1:8000;
# 生成缓存文件的地址
env WAFCDN_DATA_DIR=./data;

http {
    gzip on;
    resolver 223.5.5.5 8.8.8.8;
    lua_package_path "$prefix/script/?.lua;;";

    error_log logs/error.log debug;
    access_log off;


    # qps limit mem (key[ipv6:16b|ipv4 4b] val[4b]) 100,000,000/14
    lua_shared_dict limit_req 100M;

    # 反向代理正在缓存中的key
    lua_shared_dict cache_key 100M;

    # 缓存数据wafcdn主控数据
    lua_shared_dict request 10M;
    lua_shared_dict request_lock 1M;

    # lua_code_cache off; #开发调试

    init_by_lua_block {
        require("init")
        require("wafcdn")
    }

    upstream wafcdn_proxy_backend{
        server 0.0.0.1;
        balancer_by_lua_block {
            require("wafcdn_proxy").balancer()
        }
    }

    server {

        listen 80;
        listen 443 ssl;

        # 参考readme.md生成占位证书
        ssl_certificate certificate.crt;
        ssl_certificate_key private.key;
        ssl_certificate_by_lua_block {
            require("wafcdn").ssl()
        }

        # /@proxy 配置用户的反向代理
        location /@proxy {
            set $wafcdn_proxy_server "";
            set $wafcdn_proxy_host $host;
            rewrite_by_lua_block {
                require("wafcdn_proxy").rewrite()
            }
            header_filter_by_lua_block {   
                require("wafcdn_proxy").header_filter()
            }
            body_filter_by_lua_block {
                require("wafcdn_proxy").body_filter()
            }
            log_by_lua_block {
                require("wafcdn_proxy").log()
            }
            
            # - - - - - - - -
            # 反向代理主要配置
            # - - - - - - - -
            proxy_pass $wafcdn_proxy_server;
            proxy_set_header Host $wafcdn_proxy_host;
            
            # - - - - - - - -
            # keepalive 连接池
            # - - - - - - - -
            proxy_http_version 1.1;
            proxy_set_header Connection "";

            # - - - - - - - -
            # 对SSL后端进行兼容
            # - - - - - - - -
            proxy_ssl_server_name on;
            proxy_ssl_verify off;
        }

        # /@alias
        location /@alias {
            set $wafcdn_alias_file "";
            rewrite_by_lua_block {
                require("wafcdn_alias").rewrite()
            }
            header_filter_by_lua_block {   
                require("wafcdn_alias").header_filter()
            }
            alias $wafcdn_alias_file;
            log_by_lua_block {   
                require("wafcdn_alias").log()
            }
        }

        location / {
            # 全局变量
            set $wafcdn_site 0; #网站标识
            set $wafcdn_header ""; #公共header配置
            # 路由
            set $wafcdn_proxy ""; #反向代理配置
            set $wafcdn_alias ""; #缓存命中文件配置

            rewrite_by_lua_block {
                require("wafcdn").rewrite()
            }
            header_filter_by_lua_block {   
                require("wafcdn").header_filter()
            }
            log_by_lua_block {
                require("wafcdn").log()
            }
        }
    }
}