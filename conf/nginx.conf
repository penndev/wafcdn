# user root;
worker_processes auto;

error_log logs/error.log info;

events {
    worker_connections 10000;
}

http {
    # lua_code_cache off;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    lua_package_path "$prefix/script/?.lua;;";
    lua_shared_dict ssl 128m;
    lua_shared_dict ssl_lock 5m;
    lua_shared_dict domain 128m;
    lua_shared_dict domain_lock 5m;
    lua_shared_dict cache_lock 128m;
    init_by_lua_block {
        require("init")
    }
    server {
        listen 80;
        listen 443 ssl http2; 
        # listenDynamic
        ssl_certificate certificate.crt;
        ssl_certificate_key private.key;
        ssl_certificate_by_lua_block {
            require("wafcdn").ssl()
        }
        location /@cache {
            internal;
            set $cache_file "";
            access_by_lua_block {
                require("wafcdn").cacheaccess()
            }
            alias $cache_file;
            header_filter_by_lua_block {
                require("wafcdn").cachehead()
            }
            log_by_lua_block {
                require("wafcdn").cachelog()
            }
        }
        location / {
            rewrite_by_lua_block {
                require("wafcdn").main()
            }
            set $backend_url "";
            set $backend_host "";
            access_by_lua_block {
                require("wafcdn").backaccess()
            }
            proxy_pass $backend_url;
            proxy_set_header HOST $backend_host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $remote_addr;
            header_filter_by_lua_block {
                require("wafcdn").backhead()
            }
            body_filter_by_lua_block{
                require("wafcdn").backbody()
            }
            log_by_lua_block{
                require("wafcdn").backlog()
            }
        }
    }
}